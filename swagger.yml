openapi: 3.0.3
info:
  title: RSS API
  version: '0.1'

tags:
  - name: Manage
    description: Manage
  - name: Consume
    description: Consume

servers:
  - url: 'https://rss-api.migor.org/v1'

components:
  securitySchemes:
    OpenID:
      type: openIdConnect
      openIdConnectUrl: >-
        https://idp.dev.smag.app/auth/realms/panter-dev/.well-known/openid-configuration

  schemas:

    ContentType:
      type: string
      enum: [ HTML, TEXT, JSON ]
      default: JSON

    Article:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        updatedAt:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        viewCount:
          type: number
          readOnly: true
        claps:
          type: number
          readOnly: true
        links:
          type: array
          readOnly: true
          items:
            type: string
#            todo mag should be references
        summary:
          type: string
        content:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/ContentType'
            content:
              type: string

    Feed:
      type: object
      xml:
        name: Feed
      properties:
        id:
          type: string
          readOnly: true
        feedUrl:
          type: string
          readOnly: true
#        updated:
#          type: string
#        title:
#          type: string
#        subtitle:
#          type: string
#        links:
#          type: array
#          items:
#            type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Article'

    Authentication:
      type: object

    TextFilter:
      type: object
      properties:
        contains:
          type: string
          minLength: 2

    FeedUrl:
      type: object
      properties:
        feedUrl:
          type: string
          minLength: 2
        authentication:
          $ref: '#/components/schemas/Authentication'
        fallbacks:
          type: object
          properties:
            rssBridge:
              type: object
              properties:
                version:
                  type: string

            rssProxy:
              type: object
              properties:
                version:
                  type: string
                siteUrl:
                  type: string
                  pattern: 'http[s]://.{3,}'
                  minLength: 4
                  example: 'https://heise.de'
                strategy:
                  type: string
                  enum: [ PREFERE_QUANTITY, PREFERE_QUALITY, PREFERE_FREQUENCY ]
                  default: PREFERE_QUALITY

    RewindReplay:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/TimeUnit'

    PaginatedArticles:
      type: object
      properties:
        size:
          type: number
        from:
          type: number
        total:
          type: number
        hits:
          type: array
          items:
            $ref: '#/components/schemas/Article'

    TimeUnit:
      type: string
      enum: [ Month, Week, Day ]

    HarvestType:
      type: string
      enum: [ FromEarliest, FromLatest ]
      default: FromLatest

    UpdateType:
      type: string
      enum: [ Partial, Full ]

    ArchiveRetention:
      type: object

    TimeToLiveRetention:
      type: object

    ItemCountRetention:
      type: object
      properties:
        maxItems:
          type: number
          minimum: 0

    HarvestFrequency:
      type: object
      properties:
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        amount:
          type: number
          default: 1

    FulltextMapper:
      type: object

#    SelectorMapper:
#      type: object
#      properties:
#        selector:
#          type: string

    SubscriptionStatus:
      type: object
      properties:
        subscriptionId:
          type: string
        status:
          type: string
          enum: [ RUNNING, PAUSED, FAILED]

    Subscription:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        feedUrl:
          $ref: '#/components/schemas/FeedUrl'
        subscriberCount:
          type: number
        protection:
          oneOf:
            - $ref: '#/components/schemas/PrivateFeed'
            - $ref: '#/components/schemas/WhitelistedUrls'
            - $ref: '#/components/schemas/Secret'
        filter:
          anyOf:
            - $ref: '#/components/schemas/TextFilter'
        mappings:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/FulltextMapper'
#              - $ref: '#/components/schemas/SelectorMapper'
        harvest:
          type: object
          properties:
            type:
              $ref: '#/components/schemas/HarvestType'
            frequency:
              $ref: '#/components/schemas/HarvestFrequency'
        retention:
          oneOf:
            - $ref: '#/components/schemas/ArchiveRetention'
            - $ref: '#/components/schemas/TimeToLiveRetention'
            - $ref: '#/components/schemas/ItemCountRetention'

    AddSubscriptionRequest:
      $ref: '#/components/schemas/Subscription'

    AddSubscriptionResponse:
      $ref: '#/components/schemas/Subscription'

    UpdateSubscriptionResponse:
      type: object

    DeleteSubscriptionResponse:
      type: object

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

  requestBodies:
    UpdateSubscriptionBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              updateType:
                $ref: '#/components/schemas/UpdateType'
              content:
                $ref: '#/components/schemas/Subscription'

  parameters:
    SubscriptionIdParam:
      in: path
      name: subscriptionId
      description: ''
      required: true
      schema:
        type: string

    ApplicationIdParam:
      in: path
      name: subscriptionId
      description: ''
      required: true
      schema:
        type: string

    PlaybackParam:
      name: 'playback'
      in: 'query'
      description: ''
      schema:
        type: string
        enum: [ REWIND, LATEST ]
        default: LATEST

    FormatParam:
      name: 'format'
      in: 'query'
      description: ''
      schema:
        type: string
        enum: [ JSON, ATOM, RSS, OPML ]
        default: JSON

  responses:
    TooManyRequests:
      description: 'Too many requests'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per hour.
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: The number of requests left for the time window.
        X-RateLimit-Reset:
          schema:
            type: string
            format: date-time
          description: The UTC date/time at which the current rate limit window resets.

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    PaymentRequired:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - OpenID: [ ]

paths:
  /subscriptions/status:
    get:
      operationId: listSubscriptionsStatus
      tags:
        - 'Manage'
      responses:
        '200':
          description: the status of subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /subscriptions:
    put:
      operationId: addSubscription
      tags:
        - 'Manage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubscriptionRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSubscriptionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '426':
          description: 'Upgrade required'
        '429':
          $ref: '#/components/responses/TooManyRequests'

    get:
      operationId: listSubscriptions
      parameters:
        - $ref: "#/components/parameters/FormatParam"
      tags:
        - 'Manage'
      responses:
        '200':
          description: the list of subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
            application/xml:
              schema:
                type: object
                properties:
                  subscription:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
                xml:
                  name: subscriptions

        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '429':
          $ref: '#/components/responses/TooManyRequests'


  '/subscriptions/{subscriptionId}':
    post:
      summary: ''
      operationId: updateSubscription
      tags:
        - 'Manage'
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParam"
      requestBody:
        $ref: '#/components/requestBodies/UpdateSubscriptionBody'
      responses:
        '200':
          description: the list of subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriptionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '426':
          description: 'Upgrade required'
        '429':
          $ref: '#/components/responses/TooManyRequests'

    delete:
      summary: ''
      operationId: deleteSubscription
      tags:
        - 'Manage'
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParam"
      responses:
        '200':
          description: the list of subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriptionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

# todo mag import opml
#  /subscriptions/import:

  /feeds/{subscriptionId}:
    get:
      operationId: getFeed
      tags:
        - 'Consume'
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParam"
        - $ref: "#/components/parameters/PlaybackParam"
        - $ref: "#/components/parameters/SizeParam"
        - $ref: "#/components/parameters/FormatParam"

      responses:
        '200':
          description: the list of subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feed'
            application/rss+xml:
              schema:
                $ref: '#/components/schemas/Feed'
            application/atom+xml:
              schema:
                $ref: '#/components/schemas/Feed'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '429':
          $ref: '#/components/responses/TooManyRequests'
