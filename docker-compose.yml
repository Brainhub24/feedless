version: '3.3'

# envs https://medium.com/softonic-eng/docker-compose-from-development-to-production-88000124a57c

services:

#  keycloak:
#    image: quay.io/keycloak/keycloak:11.0.3
#    environment:
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#    ports:
#    - 8081:8080

  nitter:
    container_name: nitter
    image: zedeus/nitter:latest
    ports:
      - "8081:8080"
    expose:
      - 8081
    restart: unless-stopped

  # https://hub.docker.com/_/rabbitmq/
  # https://newbedev.com/how-to-add-initial-users-when-starting-a-rabbitmq-docker-container
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq_net

  # https://hub.docker.com/_/postgres/
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    environment:
#      - POSTGRES_DB=${databaseName}
      - POSTGRES_DB=rich-rss
#      - POSTGRES_USER=${sqlUser}
      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=${databasePassword}
      - POSTGRES_PASSWORD=admin
    expose:
      - 5432
    ports:
    - "5432:5432"
    networks:
      - sql_net

#  rich-app:
#    image: rich-rss:app
#    restart: always
##    healthcheck:
##      test: curl -f https://localhost || exit 1
#    ports:
#      - 8000:80
#    networks:
#      - frontend_net

  rich-node:
    image: damoeb/rich-rss:node
    restart: always
#    healthcheck:
#      test: curl -f https://localhost:3000 || exit 1
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/${databaseName}
    ports:
      - 8001:3000
#    expose:
#      - 3000
    networks:
      - backend_net
      - sql_net
      - rabbitmq_net

  rich-core:
    image: damoeb/rich-rss:core
    restart: always
#    healthcheck:
#      test: curl -f https://localhost:8080 || exit 1
    depends_on:
      - postgres
      - rabbitmq
#    expose:
#      - 8080
    environment:
      - sqlUser=${sqlUser}
      - sqlPassword=${sqlPassword}
      - DATABASE_URL=jdbc:postgresql://postgres:5432/${databaseName}
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - nitterHost=nitter
      - invidiousHost=invidious
    networks:
      - backend_net
      - sql_net
      - rabbitmq_net
      - nitter_net

networks:
  nitter_net:
    driver: bridge
  invidious_net:
    driver: bridge
  backend_net:
    driver: bridge
  sql_net:
    driver: bridge
  rabbitmq_net:
    driver: bridge
