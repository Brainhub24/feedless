version: '3.3'

# envs https://medium.com/softonic-eng/docker-compose-from-development-to-production-88000124a57c

services:

#  keycloak:
#    image: quay.io/keycloak/keycloak:11.0.3
#    environment:
#      - KEYCLOAK_USER=admin
#      - KEYCLOAK_PASSWORD=admin
#    ports:
#    - 8081:8080

  # https://hub.docker.com/_/rabbitmq/
  rabbitmq:
    image: rabbitmq:3.9
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq_net

  mysql:
    image: mysql:8
    container_name: database
    restart: always
    environment:
      - MYSQL_DATABASE=${databaseName}
      - MYSQL_USER=${sqlUser}
      - MYSQL_PASSWORD=${sqlPassword}
      - MYSQL_ROOT_PASSWORD=${sqlRootPassword}
    expose:
      - 3306
    ports:
    - 3306:3306
    networks:
      - sql_net

  rich-app:
    image: rich-rss:app
    restart: always
#    healthcheck:
#      test: curl -f https://localhost || exit 1
    ports:
      - 8000:80
    networks:
      - frontend_net

  rich-node:
    image: damoeb/rich-rss:rss-node
    restart: always
#    healthcheck:
#      test: curl -f https://localhost:3000 || exit 1
    depends_on:
      - mysql
      - rabbitmq
    environment:
      - DATABASE_URL=mysql://${sqlUser}:${sqlPassword}@database:3306/${databaseName}
    ports:
      - 8001:3000
    expose:
      - 3000
    networks:
      - frontend_net
      - backend_net
      - sql_net
      - rabbitmq_net

  rich-kotlin:
    image: damoeb/rich-rss:rss-kotlin
    restart: always
#    healthcheck:
#      test: curl -f https://localhost:8080 || exit 1
    depends_on:
      - mysql
      - rabbitmq
    expose:
      - 8080
    environment:
      - sqlUser=${sqlUser}
      - sqlPassword=${sqlPassword}
      - DATABASE_URL=jdbc:mysql://database:3306/${databaseName}
    networks:
      - backend_net
      - sql_net
      - rabbitmq_net

volumes:
  esdata01:
    driver: local

networks:
  frontend_net:
    driver: bridge
  backend_net:
    driver: bridge
  sql_net:
    driver: bridge
  rabbitmq_net:
    driver: bridge
