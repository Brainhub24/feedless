version: '3.4'

# envs https://medium.com/softonic-eng/docker-compose-from-development-to-production-88000124a57c

services:

  # https://hub.docker.com/_/postgres/
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${databaseName}
      - POSTGRES_USER=${sqlUser}
      - POSTGRES_PASSWORD=${sqlPassword}
    expose:
      - 5432
    ports:
    - "5432:5432"
    networks:
      - postgres

  feedless-agent:
    image: damoeb/feedless:agent-0.1
#    deploy:
#      replicas: 2
    security_opt:
      - seccomp=./chrome.json
    restart: unless-stopped
    environment:
      - EMAIL=${rootEmail}
      - SECRET_KEY=${rootSecretKey}
      - HOST=feedless-core:8080
      - SECURE=false
    ports:
      - "3000:3000"
#    healthcheck:
#      test: curl -f https://localhost:3000 || exit 1

  feedless-app:
    image: damoeb/feedless:app-0.1
    restart: unless-stopped
    ports:
      - "4200:80"

  feedless-core:
    image: damoeb/feedless:core-0.1
    restart: unless-stopped
#    healthcheck:
#      test: curl -f https://localhost:8080 || exit 1
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - sqlUser=${sqlUser}
      - sqlPassword=${sqlPassword}
      - DATABASE_URL=jdbc:postgresql://postgres:5432/${databaseName}
      - invidiousHost=invidious
      - APP_API_GATEWAY_URL=${apiGatewayUrl}
      - spring_profiles_active=authAllowRoot,database
      - APP_TIMEZONE=Europe/Berlin
      - APP_WHITESLISTED_HOSTS=feedless-core
      - AUTH_TOKEN_ANONYMOUS_VALIDFORDAYS=3
      - LOG_LEVEL=error
      - APP_JWT_SECRET=${jwtSecret}
      - APP_NITTER_HOST=${nitterHost}
      - APP_APP_HOST=${appHost}
      - APP_ACTUATOR_PASSWORD=${actuatorPassword}
      - ROOT_EMAIL=${rootEmail}
      - ROOT_SECRET_KEY=${rootSecretKey}
#     https://console.cloud.google.com/apis/credentials
      - GOOGLE_CLIENT_ID=${googleClientId}
      - GOOGLE_CLIENT_SECRET=${googleClientSecret}
      - GITHUB_CLIENT_ID=${githubClientId}
      - GITHUB_CLIENT_SECRET=${githubClientSecret}
      - DNS_TEST_URL=br.de
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
