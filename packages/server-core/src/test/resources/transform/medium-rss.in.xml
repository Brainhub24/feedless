<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[AndroidPub - Medium]]></title>
        <description><![CDATA[The (retired) Pub(lication) for Android &amp; Tech, focused on Development - Medium]]></description>
        <link>https://medium.com/android-news?source=rss----8fca399d4de---4</link>
        <image>
            <url>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</url>
            <title>AndroidPub - Medium</title>
            <link>https://medium.com/android-news?source=rss----8fca399d4de---4</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Mon, 06 Jun 2022 05:46:17 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/android-news" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Introducing Vectordrawable-Seekable]]></title>
            <link>https://medium.com/android-news/introducing-vectordrawable-seekable-b96ef57ffe36?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/b96ef57ffe36</guid>
            <category><![CDATA[android-development]]></category>
            <category><![CDATA[material-design]]></category>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[animation]]></category>
            <dc:creator><![CDATA[Alistair Sykes]]></dc:creator>
            <pubDate>Mon, 11 May 2020 13:35:28 GMT</pubDate>
            <atom:updated>2020-05-11T13:35:28.363Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Febnyxzk7cXlTWgRoYpUYQ.jpeg" /></figure><h4><em>Using the new and improved AnimatedVectorDrawable to pause and seek your animations.</em></h4><h3>AnimatedVectorDrawable</h3><p>Android SDK 21 introduced both the VectorDrawable and the AnimatedVectorDrawable. This allowed you to use vector assets within your app, and even animate them.</p><p>They’ve iterated on these since then, but AnimatedVectorDrawable was still missing something. You couldn’t manipulate and control the animation. There was no pause or seek functionality.</p><h3>Core-Animation</h3><p>The Android team has been hard at work backporting the framework Animator APIs. They have created a separate unbundled AndroidX library called Core-Animation.</p><p>The Animator APIs have been around for some time. But they didn’t provide the capabilities needed for this pause and seek functionality. So they needed to be unbundled and then iterated on.</p><h3>Vectordrawable-Seekable</h3><p>Once Core-Animation was available the Android team could create the Vectordrawable-Seekable library. This library revolves around the class SeekableAnimatedVectorDrawable.</p><p>Under the hood, this class uses the AnimatorSet and subsequently Animator from Core-Animation. These provide the pause and seek functionality.</p><h3>How to</h3><h4>Create the vector</h4><p>Firstly, you need a vector asset of the image you wish to animate. This works best if it is simple and optimised.</p><p>See these resources for information on optimising assets:</p><p>- <a href="https://www.brightec.co.uk/blog/creating-vector-drawables-android">https://www.brightec.co.uk/blog/creating-vector-drawables-android</a></p><p>- <a href="https://arturdryomov.dev/posts/optimizing-android-vector-images/">https://arturdryomov.dev/posts/optimizing-android-vector-images/</a></p><p>For this example I am going to use an Android:</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/c1f49ee65961374471c7019479d595cf/href">https://medium.com/media/c1f49ee65961374471c7019479d595cf/href</a></iframe><figure><img alt="" src="https://cdn-images-1.medium.com/max/944/0*So5ZkO11SRkrkvWH.png" /></figure><p>This XML file should be placed in your res/drawable directory.</p><p>Notice the group names, as these allow us to reference each part of the image later. Notice also the pivot points defined. These define the pivot around which rotation would happen.</p><h4>Create the animation</h4><p>To define the animation itself you can create another XML file. This defines an ObjectAnimator.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/51350379510a257647e0a635938370a3/href">https://medium.com/media/51350379510a257647e0a635938370a3/href</a></iframe><p>This file goes into your res/anim directory.</p><p>You can see from the attributes that this is a rotation animation. It will repeat infinitely by going forward and then reversing and going backwards. It will rotate from 180° to 220° over 600 milliseconds each repeat.</p><h4>Create AnimatedVectorDrawable</h4><p>We can combine these two into an animated-vector. This can again be defined within an XML file.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/0fb6305ca150a51e7ed1901cdcceff5e/href">https://medium.com/media/0fb6305ca150a51e7ed1901cdcceff5e/href</a></iframe><p>This XML file should be placed in your res/drawable directory.</p><p>This file connects the image and animation. The drawable is defined near the top. The animation rotation is targeting the arm-left.</p><h4>Using AnimatedVectorDrawable</h4><p>You can now use this animated-vector to display your animation on the screen.</p><p>Either set it on your ImageView via:</p><pre>app:srcCompat=&quot;@drawable/img_android_animated&quot;</pre><p>Or you can define it programmatically:</p><pre>val drawable = AnimatedVectorDrawableCompat.create(<br>    this, R.drawable.img_android_animated<br>)<br>imageView.setImageDrawable(drawable)<br>drawable.start()</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*Rum8AFs1qaNsEC-O.gif" /></figure><h4>Converting to SeekableAnimatedVectorDrawable</h4><p>Instead of creating an AnimatedVectorDrawable from your XML, create a SeekableAnimatedVectorDrawable:</p><pre>val drawable = SeekableAnimatedVectorDrawable.create(<br>    this, R.drawable.img_android_animated<br>)<br>imageView.setImageDrawable(drawable)<br>drawable.start()</pre><p>Now you have access to pause seek functionality.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fplayer.vimeo.com%2Fvideo%2F415890449%3Fapp_id%3D122963&amp;dntp=1&amp;display_name=Vimeo&amp;url=https%3A%2F%2Fvimeo.com%2F415890449&amp;image=https%3A%2F%2Fi.vimeocdn.com%2Fvideo%2F889531205_960.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=vimeo" width="970" height="2048" frameborder="0" scrolling="no"><a href="https://medium.com/media/ccaec0591db3af0e80def8e14b37e5fe/href">https://medium.com/media/ccaec0591db3af0e80def8e14b37e5fe/href</a></iframe><p><strong>Play/Pause</strong></p><pre>drawable.pause()<br>drawable.play()</pre><p><strong>Duration</strong></p><pre>drawable.totalDuration</pre><p>Note for infinite animations this will return -1.</p><p><strong>Current Time</strong></p><pre>drawable.currentPlayTime</pre><p>This can be both gotten and set. If you set this value, the animation will be set to that time and continued if it was already running.</p><h3>Conclusion</h3><p>These new API’s provide some interesting functionality. It unlocks some very cool and delighting animations.</p><p>Both Core-Animation and Vectordrawable-Seekable are in alpha at the time of writing. It is worth noting that Core-Animation is mostly a backport of the existing framework API’s. So arguably it should be more stable than a usual alpha release.</p><p><a href="https://developer.android.com/jetpack/androidx/releases/vectordrawable">https://developer.android.com/jetpack/androidx/releases/vectordrawable</a> <a href="https://developer.android.com/jetpack/androidx/releases/core">https://developer.android.com/jetpack/androidx/releases/core</a></p><p>Now you can pause and seek to your heart’s content.</p><p><em>Previous Post</em></p><p><a href="https://android.jlelse.eu/education-through-motion-b500a77a3b5">Education through motion</a></p><p><em>Originally published at </em><a href="https://www.brightec.co.uk/blog/introducing-vectordrawable-seekable"><em>https://www.brightec.co.uk</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b96ef57ffe36" width="1" height="1" alt=""><hr><p><a href="https://medium.com/android-news/introducing-vectordrawable-seekable-b96ef57ffe36">Introducing Vectordrawable-Seekable</a> was originally published in <a href="https://medium.com/android-news">AndroidPub</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Crack Top Android Development Company Interview]]></title>
            <link>https://medium.com/android-news/crack-top-android-development-company-interview-f106756f045e?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/f106756f045e</guid>
            <category><![CDATA[crack]]></category>
            <category><![CDATA[interview]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[java]]></category>
            <category><![CDATA[tips]]></category>
            <dc:creator><![CDATA[Budhdi Sharma]]></dc:creator>
            <pubDate>Fri, 08 May 2020 20:48:42 GMT</pubDate>
            <atom:updated>2020-05-08T20:48:42.088Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*yXPrTKP-Pt_6CfNl" /></figure><p>The interviewer in interviews asked these questions with top-tier Internet companies. Familiarity with the knowledge points listed in this article will greatly increase the chance of passing the first two rounds of technical interviews.</p><p>Mainly divided into the following parts:</p><p>(1) Java interview questions</p><p>(2) Android interview questions</p><p>(3) Advanced development technology interview questions</p><p>(4) Cross-platform Hybrid development</p><h3><strong>Java interview questions</strong></h3><p>Mastering java is very important. Large companies not only require you to use a few APIs, but also require you to be familiar with the principles of source code implementation, and even require you to know what are the deficiencies, how to improve, and some Java-related algorithms, Design patterns, etc.</p><h4><strong>Java basic interview knowledge points</strong></h4><p>The difference between == and equals and hashCode in java</p><p>How many bytes each int, char, and long occupy</p><p>The difference between int and integer</p><p>Explore the understanding of java polymorphism</p><p>Difference between String, StringBuffer, StringBuilder</p><p>What is the internal class? The role of inner classes</p><p>The difference between abstract classes and interfaces</p><p>The meaning of abstract class</p><p>Application scenarios of abstract classes and interfaces</p><p>Can abstract classes have no methods and properties?</p><p>The meaning of the interface</p><p>The difference between extends and super in generics</p><p>Can the child class override the static method of the parent class?</p><p>The difference between process and thread</p><p>The difference between final, finally, and finalize</p><p>Serialization</p><p>The difference between Serializable and Parcelable</p><p>Can static properties and static methods be inherited? Can it be rewritten? And why?</p><p>Design Intent of Static Inner Class</p><p>Understanding of member internal class, static internal class, local internal class, and anonymous internal class, and application in the project</p><p>Talk about understanding kotlin</p><p>The difference between closures and local inner classes</p><p>The method and principle of converting the string to integer</p><h4><strong>Java in-depth source-level interview questions (difficult)</strong></h4><p>Under what circumstances will the object be disposed of by the garbage collection mechanism?</p><p>Tell me about common coding methods?</p><p>How many bytes does English in UTF-8 encoding take; how many bytes is int?</p><p>What is the difference between static proxy and dynamic proxy?</p><p>Java’s exception system</p><p>Talk about your understanding of parsing and assignment.</p><p>Modify the signature of the equals method of object A, so which equals method will be called when using HashMap to store this object instance?</p><p>What is the mechanism for implementing polymorphism in Java?</p><p>How to serialize a Java object into a file?</p><p>Talk about your understanding of Java reflection</p><p>Talk about your understanding of Java annotations</p><p>Talk about your understanding of dependency injection</p><p>Talk about the principle of generics and give examples</p><p>Understanding of String in Java</p><p>Why should String be designed to be immutable?</p><p>Object equal and hashCode method rewrite, why?</p><h3><strong>Data structure</strong></h3><p>Introduction to common data structures</p><p>What does concurrent collection know?</p><p>List Java collections and the inheritance relationship between collections</p><p>Collection class and collection framework</p><p>Introduction to the container class and the difference between them (the container class is estimated that many people do not listen to this term. Java containers can be divided into four parts: List list, Set collection, Map mapping, and tool class (Iterator iterator, Enumeration enumeration class Arrays and Collections)</p><p>The difference between List, Set, Map</p><p>List and Map implementation and storage</p><p>The realization principle of HashMap</p><p>HashMap data structure?</p><p>HashMap source code understanding</p><p>How to put data in HashMap (explain from the perspective of HashMap source code)?</p><p>How to implement HashMap by hand?</p><p>Implementation principle of ConcurrentHashMap</p><p>Comparison of ArrayMap and HashMap</p><p>HashTable implementation principle</p><p>TreeMap implementation</p><p>The difference between HashMap and HashTable</p><p>The difference between HashMap and HashSet</p><p>How do HashSet and HashMap judge duplicate elements in a set?</p><p>How does Set prevent Hash to prevent collision?</p><p>The difference between ArrayList and LinkedList, and application scenarios</p><p>The difference between arrays and linked lists</p><p>Concrete implementation of depth-first traversal and breadth-first traversal of binary trees</p><p>The structure of the heap</p><p>The difference between heap and tree</p><p>What is the difference between heap and stack in memory (answer hint: you can answer from two aspects of data structure and actual implementation)?</p><p>What is deep copy and shallow copy</p><p>Handwritten linked list reverse order code</p><p>Tell me about the understanding of trees, B + trees</p><p>Tell me about the understanding of the picture</p><p>To judge whether a singly linked list is looped?</p><p>Linked list flip (ie: flip a single necklace watch)</p><p>Merging multiple single-ordered linked lists (assuming all are increasing)</p><h3><strong>Threads, multithreading and thread pool</strong></h3><p>Three ways to start threads?</p><p>The difference between threads and processes?</p><p>Why are there threads, not just processes?</p><p>The difference between run () and start () methods</p><p>How to control the number of concurrent access threads for a method?</p><p>The difference between wait and sleep() methods in Java;</p><p>Talk about the understanding of the wait / notify keyword</p><p>What causes the thread to block?</p><p>How do threads close?</p><p>Tell me about the synchronization method in java</p><p>How to ensure data consistency?</p><p>How to ensure thread safety?</p><p>How to achieve thread synchronization?</p><p>Can both processes write or read at the same time? How to prevent process synchronization?</p><p>Inter-thread operation List</p><p>Life cycle of objects in Java</p><p>Synchronized usage</p><p>Principle of synchronize</p><p>Talk about the understanding of Synchronized keywords, class locks, method locks, reentrant locks</p><p>Multi-threaded access and function of static synchronized method</p><p>Two synchronized methods in the same class, the problem of simultaneous access by two threads</p><p>The principle of volatile</p><p>Talk about the usage of volatile keyword</p><p>Talk about the role of the volatile keyword</p><p>Talk about NIO’s understanding</p><p>The difference between synchronized and volatile keywords</p><p>The difference between synchronized and Lock</p><p>ReentrantLock, synchronized and volatile comparison</p><p>ReentrantLock’s internal implementation</p><p>lock principle</p><p>The four necessary conditions for deadlock?</p><p>How to avoid deadlock?</p><p>Will object locks and class locks affect each other?</p><p>What is a thread pool and how to use it?</p><p>Java’s concurrency, multithreading, threading model</p><p>Talk about the understanding of multi-threading</p><p>What are the issues to be aware of in multithreading?</p><p>Talk about your understanding of concurrent programming and give examples</p><p>Talk about your understanding of the multi-thread synchronization mechanism?</p><p>How to ensure the security of multi-threaded read and write files?</p><p>Multithread breakpoint resume transmission principle</p><p>Realization of resuming of breakpoint</p><h4><strong>Knowledge points about concurrent programming</strong></h4><blockquote>Usually, less concurrent programming can be done in Android development. The Thread class is often used, but if we want to improve ourselves, we must not stay on the surface. We should also learn about java’s thread-related source code thing.</blockquote><h3><strong>Android interview questions</strong></h3><p>Android interview questions include Android basics, as well as some source-level, principle, etc. So if you want to go to an interview with a large company, you must look at the source code and implementation methods. Common frameworks can try whether you can implement it by hand and exercise yourself.</p><h4><strong>Android basics</strong></h4><p>What are the four components?</p><p>The life cycle and simple usage of the four major components</p><p>Communication between activities</p><p>Activity life cycle under various circumstances</p><p>When switching between horizontal and vertical screens, the life cycle of Activity in various situations</p><p>Life cycle comparison between Activity and Fragment</p><p>Life cycle when pressing the Home button when there is a Dialog on the Activity</p><p>Which methods must be executed when jumping between two activities?</p><p>The foreground switches to the background, and then back to the foreground, Activity life cycle callback method. Dialog pops up, life cycle callback method.</p><p>Comparison of the four startup modes of Activity</p><p>Activity state saved in recovery</p><p>Fragment life cycle in various situations</p><p>Fragment state save startActivityForResult is which class method, under what circumstances?</p><p>How to realize the sliding of Fragment?</p><p>How to transfer data between fragments?</p><p>How does Activity bind to Service?</p><p>How to start the corresponding Service in Activity?</p><p>How to perform data interaction between service and activity?</p><p>Service opening method</p><p>Please describe the life cycle of Service</p><p>Talk about your understanding of ContentProvider</p><p>Talk about the relationship between ContentProvider, ContentResolver, ContentObserver</p><p>Please describe the understanding of BroadcastReceiver</p><p>Broadcast classification</p><p>Ways and scenarios of broadcast use</p><p>How to register and use BroadcastReceiver in the manifest and code?</p><p>What is the difference between local broadcast and global broadcast?</p><p>BroadcastReceiver, LocalBroadcastReceiver difference</p><p>AlertDialog, popupwindow, activity difference</p><p>The difference between Application and Activity Context objects</p><p>Android property animation features</p><p>How to import an external database?</p><p>Features and comparison of LinearLayout, RelativeLayout, and FrameLayout, and introduces usage scenarios.</p><p>Talk about the understanding of interfaces and callbacks</p><p>The principle of callback</p><p>Write a callback demo</p><p>Introduction to SurfView</p><p>Use of RecycleView</p><p>The role of serialization, and the difference between the two serialization of Android</p><p>Difference</p><p>Estimator</p><p>How to store data in Android</p><h4><strong>Android source code related analysis</strong></h4><p>Android animation framework implementation principle</p><p>Differences between APIs of Android versions</p><p>Requestlayout, onlayout, onDraw, DrawChild difference and connection</p><p>The difference and use of invalidate and postInvalidate</p><p>The difference between Activity-Window-View</p><p>Talk about understanding Volley</p><p>How to optimize custom View</p><p>How does the low version SDK implement the high version API?</p><p>Describe the flow of a network request</p><p>HttpUrlConnection and okhttp relationship</p><p>Understanding Bitmap objects</p><p>looper architecture</p><p>The working principle of ActivityThread, AMS, WMS</p><p>Custom View how to consider model adaptation</p><p>Custom View events</p><p>What is the difference between AstncTask + HttpClient and AsyncHttpClient?</p><p>LaunchMode application scenarios</p><p>How to use AsyncTask?</p><p>SpareArray principle</p><p>Please introduce how ContentProvider implements data sharing?</p><p>Several ways of communication between AndroidService and Activity</p><p>What is the principle and role of IntentService?</p><p>Talk about the relationship between Activity, Intent, Service</p><p>The difference between ApplicationContext and ActivityContext</p><p>Is SP synchronized by process? Is there any way to achieve synchronization?</p><p>Talk about the use of multi-threading in Android</p><p>Process and Application Life Cycle</p><p>How to know the size of the view when packaging the view</p><p>RecycleView principle</p><p>The role and understanding of AndroidManifest</p><h4><strong>Some common principle problems</strong></h4><p>Handler mechanism and underlying implementation</p><p>The difference between Handler, Thread and HandlerThread</p><p>How does the looper start when the handler sends a message to the child thread?</p><p>Regarding Handler, what thread is the new Handler in any place?</p><p>ThreadLocal principle, implementation and how to ensure the Local property?</p><p>Please explain the relationship between Message, Handler, Message Queue, Looper in the single-threaded model</p><p>Please describe the View event delivery and distribution mechanism</p><p>Touch event delivery process</p><p>What is the difference between onTouch and onTouchEvent in event distribution, and how to use it?</p><p>What are the callback methods related to event distribution in View and ViewGroup?</p><p>View refresh mechanism</p><p>View drawing process</p><p>Principle of custom control</p><p>How does a custom View provide an interface to get View properties?</p><p>Implement WAP networking in Android code</p><p>AsyncTask mechanism</p><p>AsyncTask principle and shortcomings</p><p>How to cancel AsyncTask?</p><p>Why can’t I update the UI on the child thread?</p><p>What is the cause of ANR?</p><p>ANR positioning and correction</p><p>What is oom?</p><p>What causes oom?</p><p>Is there any solution to avoid OOM?</p><p>Can Oom try catch? why?</p><p>What is a memory leak?</p><p>What causes a memory leak?</p><p>How to prevent memory leaks of threads?</p><p>Solution for memory leak field</p><p>Difference between memory leak and memory overflow?</p><p>LruCache default cache size</p><p>ContentProvider permission management (answer: read-write separation, permission control-accurate to table level, URL control)</p><p>How to intercept and abort a text message through broadcast?</p><p>Can broadcast request network?</p><p>What is the time limit of anr caused by broadcasting?</p><p>Calculate the nesting level of a view</p><p>Activity stack</p><p>Is there an upper limit for Android threads?</p><p>Is there an upper limit for the thread pool?</p><p>What does ListView reuse?</p><p>Why did Android introduce Parcelable?</p><p>Have you tried to simplify the use of Parcelable</p><h4><strong>Some common problems in the development</strong></h4><p>How does the problem of image misalignment in ListView arise?</p><p>Do you understand hybrid development?</p><p>Know which hybrid development methods? Name their advantages and disadvantages and their respective usage scenarios? (Answer: For example RN, weex, H5, applet, WPA, etc. It is still beneficial to do some understanding of Android-front-end js, etc.);</p><p>What are the processing techniques for screen adaptation?</p><p>The server only provides a data receiving interface. How to ensure the orderly arrival of data under multi-thread or multi-process conditions?</p><p>Understanding dynamic layout</p><p>How to remove duplicate code?</p><p>Draw the general architecture diagram of Android</p><p>The difference between Recycleview and ListView</p><p>The principle and solution of ListView image loading disorder</p><p>Dynamic permission adaptation scheme, the concept of the permission group</p><p>Why did the Android system design ContentProvider?</p><p>Does the drop-down status bar affect the life cycle of the activity</p><p>If a network request is made during onStop, how to recover it during onResume?</p><p>What should you pay attention to when using Bitmap?</p><p>Bitmap recycler ()</p><p>The main steps to turn on the camera in Android</p><p>ViewPager usage details, how to set it to initialize the current Fragment every time, other not initialized?</p><p>Click event is intercepted, but want to pass to the View below, how to operate?</p><p>Implementation of WeChat main page</p><p>The principle of the little red dot on the WeChat message</p><p>Introduction to CAS</p><h3><strong>Advanced development technology interview questions</strong></h3><p><strong>Here are some high-end Android technologies that large companies need to use. Here I have compiled a document specifically; I hope everyone can look. These topics are a bit technical and need some time to study.</strong></p><h4><strong>Picture</strong></h4><p>Picture library comparison</p><p>Source analysis of image library</p><p>Picture frame cache implementation</p><p>Principle of LRUCache</p><p>Image loading principle</p><p>How to do it by yourself to realize the picture library?</p><p>Glide source code analysis</p><p>What cache does Glide use?</p><p>How to control the size of Glide memory cache?</p><h4><strong>Network and security mechanisms</strong></h4><p>Network framework comparison and source code analysis</p><p>How to do it yourself to design a network request framework?</p><p>okhttp source code</p><p>Network request cache processing, how does okhttp handle network cache</p><p>Load a 10M picture from the network and talk about the precautions</p><p>TCP’s 3 handshake and 4 waves</p><p>The difference between TCP and UDP</p><p>Application of TCP and UDP</p><p>HTTP protocol</p><p>The difference between HTTP1.0 and 2.0</p><p>HTTP message structure</p><p>The difference between HTTP and HTTPS and how to achieve security</p><p>How to verify the validity of the certificate?</p><p>Where is symmetric encryption used in https, and where is asymmetric encryption used? Do you know the encryption algorithm (such as RSA)?</p><p>How does the client determine that the message it sent was received by the server?</p><p>Talk about your understanding of WebSocket</p><p>The difference between WebSocket and socket</p><p>Talk about your understanding of Android signature.</p><p>Please explain why Android needs to add a signature mechanism?</p><p>Video encryption transmission</p><p>How are apps sandboxed, and why do they do it?</p><p>Permission management system (how is the bottom permission granted)?</p><h4><strong>Database</strong></h4><p>sqlite upgrade, add field statement</p><p>Database framework comparison and source code analysis</p><p>Database optimization</p><p>Database data migration issues</p><h4><strong>Algorithm</strong></h4><p>What are the sorting algorithms?</p><p>What is the fastest sorting algorithm?</p><p>Handwriting a bubble sort</p><p>Handwritten quick sort code</p><p>Quick sorting process, time complexity, space complexity</p><p>Handwriting heap sorting</p><p>Heap sorting process, time complexity and space complexity</p><p>Write the sorting algorithm you know, time-space complexity, stability</p><p>Binary tree gives root node and target node, find the path from root node to target node</p><p>Which algorithm should be selected for sorting by age for more than 20,000 employees of Ali?</p><p>GC algorithm (the advantages and disadvantages of various algorithms and application scenarios)</p><p>Ant colony algorithm and Monte Carlo algorithm</p><p>Substring inclusion problem (KMP algorithm) write code implementation</p><p>An unordered, non-repetitive array outputs N elements, so that the sum of N elements is added as M, giving time complexity and space complexity. Handwriting algorithm</p><p>Trillion-level two URL files A and B. How to find the difference C between A and B optimization)</p><p>How to try to find the nearest merchant function in Baidu POI (hint: coordinate mirror + R tree).</p><p>Find the common elements in two non-repeating array collections.</p><p>Of the two non-repeating array collections, these two collections are huge amounts of data, which cannot be put in memory. How to find common elements?</p><p>There are 1 million integers in a file, separated by spaces. In the program, determine whether the integer entered by the user is in this file. Say the best way</p><p>Calculation of memory occupied by a Bitmap and memory usage</p><p>20 million integers, find the 50th largest number?</p><p>It takes a total of 1 hour to burn an uneven rope from start to finish. Now that there are several ropes of the same material, how do you use the method of burning rope to time an hour and fifteen minutes?</p><p>Find the number of daffodils within 1,000 and the number of daffodils within 4 billion</p><p>How to divide 5 coins, 2 positives and 3 negatives into two piles, and then turn over to make the number of hard 8 coins facing upwards and the number of coins facing upwards in the two piles the same</p><p>The hour hand goes one turn, the hour hand and minute hand overlap several times</p><p>N * N graph paper, how many squares are inside</p><p>X apples can only eat one, two, or three a day. How many days can I finish?</p><h4><strong>Plug-in, modularization, componentization, hot repair, incremental update, Gradle</strong></h4><p>Understanding of hot repair and plug-in</p><p>Analysis of plug-in principle</p><p>Modular implementation (benefits, reasons)</p><p>Hot fix, plug-in</p><p>Project component understanding</p><p>Describe what happened after clicking the build button of Android Studio</p><h4><strong>Architecture design and design mode</strong></h4><p>Talk about your understanding of the Android design pattern</p><p>MVC MVP MVVM principle and difference</p><p>What design patterns do you know?</p><p>Design patterns commonly used in projects</p><p>Handwritten producer / consumer model</p><p>Write the code for the observer mode</p><p>Similarities and differences between adapter mode, decorator mode, and appearance mode?</p><p>Some open source frameworks used, introduce an internal implementation process that has seen the source code.</p><p>Talk about understanding RxJava</p><p>RxJava function and principle realization</p><p>The advantages and disadvantages of the role of RxJava compared with the asynchronous operations usually used</p><p>Talk about the function and implementation of EventBus, the way to replace EventBus</p><p>Design an overall app architecture from 0, how to do it?</p><p>Say and design an application that you think is currently hot (for example: live broadcast app, P2P finance, small video, etc.)</p><p>Talk about understanding the java state machine</p><p>How to decouple if Fragment is used in Adapter?</p><p>Binder mechanism and its underlying implementation</p><p>How does this update work for apps? (Answer: Grayscale, mandatory update, update by area)?</p><p>Implement a Json parser (can increase speed through regularization)</p><p>Statistics start time, standard</p><h3><strong>Performance optimization</strong></h3><p>How to perform performance analysis and optimization of Android applications?</p><p>ddms and traceView</p><p>How to analyze systrace for performance optimization?</p><p>How to analyze memory leak with IDE?</p><p>How to solve the performance problem caused by Java multithreading?</p><p>Start screen white screen and black screen solved?</p><p>How to solve the problem of too slow startup?</p><p>How to ensure that the application does not freeze?</p><p>App startup crash exception capture</p><p>Notes on customizing View</p><p>Now the download speed is very slow, try to analyze the reason from the perspective of the network protocol and optimize it (hint: all 5 layers of the network can be involved).</p><p>Https request slow solution (hint: DNS, carry data, directly access IP)</p><p>How to maintain the stability of the application</p><p>RecyclerView and ListView performance comparison</p><p>ListView optimization</p><p>RecycleView optimization</p><p>View rendering</p><p>How does Bitmap handle big pictures, such as a 30M big picture, how to prevent OOM</p><p>The difference between the four kinds of references in java and usage scenarios</p><p>Will the strong reference be set to null, will it be recycled?</p><h3><strong>NDK, jni, Binder, AIDL, process communication</strong></h3><p>Please introduce NDK</p><p>What is the NDK library?</p><p>Have you used jni?</p><p>How to register native function in jni, there are several ways to register?</p><p>How does Java call C and C ++ languages?</p><p>How does jni call java layer code?</p><p>How to communicate between processes?</p><p>Binder mechanism</p><p>Brief description of IPC?</p><p>What is AIDL?</p><p>What problem does AIDL solve?</p><p>How to use AIDL?</p><p>How does Inter-Process-Communication work on Android?</p><p>Have you met a multi-process scenario?</p><p>Android process classification?</p><p>Process and Application life cycle?</p><p>Process scheduling</p><p>Talk about the understanding of process sharing and thread safety</p><p>Talk about the understanding of multi-process development and multi-process application scenarios</p><p>What is a coroutine?</p><h3><strong>Framework layer, ROM customization, Ubuntu, Linux, and other issues</strong></h3><p>Characteristics of java virtual machine</p><p>Talk about the understanding of jvm</p><p>JVM memory area, which memory is affected by threading</p><p>What do you know about Dalvik and ART virtual machines?</p><p>Art and Dalvik comparison</p><p>The principle of virtual machine, how to design a virtual machine yourself (memory management, class loading, parent delegation)</p><p>Talk about your understanding of the parent delegation model</p><p>JVM memory model, memory area</p><p>Classloading mechanism</p><p>Talk about the understanding of ClassLoader (class loader)</p><p>Talk about the understanding of dynamic loading (OSGI)</p><p>Circular references and avoidance of memory objects</p><p>Memory recycling mechanism, GC recycling strategy, GC timing, and GC objects</p><p>The difference between the garbage collection mechanism and calling System.gc ()</p><p>Ubuntu compile Android system</p><p>What is the system startup process? (Hint: Zygote process-&gt; SystemServer process-&gt; various system services-&gt; application process)</p><p>Generally speaking, what happens when an application is installed on the phone</p><p>Briefly describe the entire process of Activity startup</p><p>App startup process, start by clicking on the desktop</p><p>Logical address and physical address, why use logical address?</p><p>What is the amount of memory allocated by Android for each application?</p><p>Can Android allocate process memory by itself?</p><p>Process keep alive</p><p>How to ensure that a background service is not killed? (Same question: How to ensure that the service is not killed in the background?) What is the more power-saving way?</p><p>How to wake up other processes in the app</p><h3><strong>Cross-platform Hybrid development</strong></h3><p>flutter</p><p>Html5 project combat</p><p>HTML &amp; CSS &amp; JavaScript combat</p><p>WordPress building website project combat</p><p>Front-end Vue architecture</p><p>Front-end style development</p><p>Weex built-in capabilities</p><p>Weex native application</p><p>Weex extension framework</p><p>WeexUI architecture</p><p>Introduce which projects you have done</p><p>What frameworks and platforms have you used?</p><p>What custom controls have you used?</p><p>What are the areas where the research is more in-depth?</p><p>What are the channels of concern for industry information?</p><p>What books have you read recently?</p><p>Are there any open source projects?</p><p>The technical points that I am most good at, the technical fields and technical points that I am most interested in</p><p>What open source libraries are used in the project and how to avoid the security and stability problems caused by the introduction of open-source libraries</p><p>What did you do during the internship and what was your output?</p><h3><strong>Summary</strong></h3><p>Because the workload of sorting answers to many questions is too large, it is limited to providing knowledge points. If you are looking for a job, it is recommended to go through them one by one. If you do n’t understand, you can ask questions.</p><p>I will write some more article/blog on Coding Interview Tips to get to know more about it, please <a href="https://medium.com/@budhdisharma">follow </a>or Clapp for the article.</p><p>I hope you enjoyed this session. If you have any comments or questions, please join the forum discussion below!</p><p>Thanks for the support :)</p><p><a href="https://medium.com/u/e1f26db83092">Android Developers</a> <a href="https://medium.com/u/495e4a6d13a5">Interviewstreet</a> <a href="https://medium.com/u/cadf9a318872">Crack Code Interview</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=f106756f045e" width="1" height="1" alt=""><hr><p><a href="https://medium.com/android-news/crack-top-android-development-company-interview-f106756f045e">Crack Top Android Development Company Interview</a> was originally published in <a href="https://medium.com/android-news">AndroidPub</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Deep Dive into Activity Results API — No More onActivityResult()]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/android-news/activity-results-api-69be5a225e86?source=rss----8fca399d4de---4"><img src="https://cdn-images-1.medium.com/max/1280/1*5qS8vUrb65fUUoANF5vXew.png" width="1280"></a></p><p class="medium-feed-snippet">Learn New ActivityResultContracts by Examples</p><p class="medium-feed-link"><a href="https://medium.com/android-news/activity-results-api-69be5a225e86?source=rss----8fca399d4de---4">Continue reading on AndroidPub »</a></p></div>]]></description>
            <link>https://medium.com/android-news/activity-results-api-69be5a225e86?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/69be5a225e86</guid>
            <category><![CDATA[android]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[androiddev]]></category>
            <category><![CDATA[android-app-development]]></category>
            <dc:creator><![CDATA[Wajahat Karim]]></dc:creator>
            <pubDate>Sun, 03 May 2020 00:11:01 GMT</pubDate>
            <atom:updated>2020-05-03T00:11:01.377Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[GitFlow with GitHub]]></title>
            <link>https://medium.com/android-news/gitflow-with-github-c675aa4f606a?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/c675aa4f606a</guid>
            <category><![CDATA[gitflow]]></category>
            <category><![CDATA[git]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[gitlab]]></category>
            <category><![CDATA[github]]></category>
            <dc:creator><![CDATA[Maciej Najbar]]></dc:creator>
            <pubDate>Mon, 27 Apr 2020 17:43:02 GMT</pubDate>
            <atom:updated>2020-04-27T17:43:02.336Z</atom:updated>
            <content:encoded><![CDATA[<p>Why we have to choose between safety and tidiness?</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*tUlhQJzYu4b5rXjj.png" /><figcaption><a href="https://nvie.com/posts/a-successful-git-branching-model/">https://nvie.com/posts/a-successful-git-branching-model/</a></figcaption></figure><p>Quick note before I begin. GitFlow, was first published by Vincent Driessen in 2010. He suggests a simpler workflow — <a href="https://guides.github.com/introduction/flow/">GitHub Flow</a> — for the teams that do not have to support multiple versions at the same time. For further reading see the <a href="https://nvie.com/posts/a-successful-git-branching-model/">post from the author himself</a>.</p><p>Most of the teams around the world have worked, work or will work with GitFlow. A good understanding of branch management and conflicts resolution can save a lot of trouble. The latter is the topic that I will focus the most in this article.</p><h3>tl;dr</h3><h4>Long living branches</h4><ul><li><strong>master</strong> — this is where stable production ready code lands. No direct commits are allowed. If you want to configure Continuous Delivery for your project, master branch is exactly the place (read how to <a href="https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">hook on commits</a>). Each change on this branch must be tagged with version number.</li><li><strong>develop</strong> — this is a construction area. All new features are merged to it. This branch should be buildable all the time. If it doesn’t (for any reasons), fix it asap.</li></ul><h4>Special branches</h4><p><strong>Feature branch</strong><br>- branches off from <strong>develop</strong><br>- merges to <strong>develop</strong><br>- naming: anything but <strong>master</strong>, <strong>develop</strong>, <strong>release</strong> or <strong>hotfix</strong>; most commonly <strong>devName/JiraTicketNo</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/996/1*x1ZWfxBYKqmaziwdHj2TUg.png" /><figcaption>Feature branch</figcaption></figure><p><strong>Release branch</strong><br>- branches off from <strong>develop<br></strong>- merges to <strong>master</strong> and <strong>develop</strong><br>- naming: <strong>release</strong>, <strong>rc</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/994/1*nmpsEaFVbJGw46TQcPcYdA.png" /><figcaption>Release branch</figcaption></figure><p><strong>Hotfix branch</strong><br>- branches off from <strong>master</strong><br>- merges to <strong>master</strong> and <strong>develop</strong> or <strong>release</strong> (if exists)<br>- naming: <strong>hotfix</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Ua7iUtqW0fx0R8JzETHC9Q.png" /><figcaption>Hotfix branch</figcaption></figure><h3>Conflicts</h3><p>This is the most important topic to cover. They will occur eventually — even in one-man projects; that’s right, I work with a great developer who did do just that 🙂 Anyway, I want to focus mostly on it because it’s a very marshy ground and can bring tragic effects to the project.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*04GjisZVs986ZMIYzxeuIA.png" /><figcaption>Perfect flow? Never happen!</figcaption></figure><p>I know the feature branch may look like it doesn’t follow GitFlow rules, but let me explain it.</p><blockquote>Plans are useless, but planning is indispensable. — Dwight Eisenhower</blockquote><p>Sometimes you take a bug ticket into a sprint and this bug turns out to be a big refactoring that lasts for couple of sprints. When refactoring gets big enough, this branch becomes a stand-alone version and is not included in any future sprints. It must pass all regression testing and is considered as a hotfix.</p><p>We all desire a harmony and… Let me stop you right there. Projects that run in teams are messy. Tools that we have can be a pain in ass too. Privileges, configurations, … There are just too many things that can go bad or make us workaround.</p><h3>Merging</h3><p>Even simple decision as which variant of merge to choose when working with GitFlow can be a bone of contention. Which one do you prefer?</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*J1fhvgyU9Xg-E_7eO0YOLA.png" /><figcaption>Merge no fast-forward / merge (fast-forward) / merge and squash</figcaption></figure><p>Each decision has its effects. Let’s discuss what they are.</p><h4><strong>Merge (default)</strong></h4><p>Simple fast-forward merge is the most messy. Depending on situation on merging branch it can look like below. Probably that is why there’s no such option on GitHub.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*hVI3DLw2G8y4ekFbGv3zbQ.png" /><figcaption>Left: no fast-forward; Right fast-forward</figcaption></figure><p>On the right we have a take over of other branch’s history. Merge is quick, requires no other action. Whereas merging is effortless, searching for feature in commits that introduced it is exhausting.</p><h4><strong>Merge no fast-forward</strong></h4><p>This one always requires us to create a merge commit. No fast-forward option is set by default when working with GitHub and in long run, causes the least pain. This is preferred by Vincent in his GitFlow workflow. It displays entire history of merges. There’s one caveat though which I’ll explain in section GitFlow with GitHub.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/768/1*kYY0L3NxupMQxRA-v6HuOw.png" /><figcaption>backporting develop to release</figcaption></figure><h4><strong>Merge squash</strong></h4><p>A project history given by squashing is tempting to be used as a default option. It’s just a straight line with commit dots — fantastic! But when something looks nice, it must be bitter. One merge squash can create a conflict where we expect none.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*3i-g11voVaj9n9CSR0gZoQ.png" /><figcaption>Conflict on merge to master; accept changes from release branch</figcaption></figure><h4>GitFlow with GitHub</h4><p>GitHub gives us great options like e.g. protecting branches from direct commits. It’s a good practice, in my opinion, to protect two main branches <strong>master</strong> and <strong>develop</strong>. But let’s remember it’s a double-edged sword — it requires other peers to review the code — apart from blind approves 😉 — but prevents us from having a clean history.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/686/1*2uDyy33npbJ8obmCmk0M4A.png" /><figcaption>GitFlow expected result</figcaption></figure><p><strong>Clean GitFlow </strong>— expected result is as as presented. All the branches get updated by merge with no fast-forward method. The history is clean. No extra merging required. Conflicts are resolved within this merge. Unfortunately, having protected branches prevents us from such operation.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/724/1*4Ps5EpssLgIqj9m_fJO7iA.png" /><figcaption>GitHub PR backporting to release (the way GitHub allows)</figcaption></figure><p><strong>Merge no fast-forward</strong> — besides visual representation in a git history, this method turns out to be safe. As developers working with someone else’s businesses I suggest we stick to things that are safe rather than pretty. With this method we can very thoroughly walk through the history and study what was happening on each step.</p><p><strong>Merge squash</strong> — It’s safe to use this method for merging feature branches to develop. It makes develop branch look clean — like really clean.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*7i0NKL0F0YgH-5cHRy109Q.png" /><figcaption>Develop branch with squashed feature branches</figcaption></figure><p>Unfortunately I cannot think of any other usage for merge squash when using GitHub’s Pull Request system.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/724/1*Q2pSl_8NcGQB7eGXQ5y4Pg.png" /><figcaption>GitHub PR backporting to release (wishful thinking)</figcaption></figure><p>It would be very helpful to have merge options on GitHub PRs. Defining merge strategy would solve the issue with ugly graph when backporting (image on the left). After we updated release branch with changes from hotfix we pulled changes from develop by using merge squash (develop -&gt; release). This way we resolved the conflicts on our release branch and we should be able to merge it back to develop without any problems — in theory. It fact, commits on develop branch still cause conflicts — which shouldn’t matter anymore and we should just override changes on develop with changes from release branch. We could do it with a command below, but protected branches won’t let us push these changes to a remote.</p><pre>git checkout develop<br>git merge -s recursive -X theirs release</pre><figure><img alt="" src="https://cdn-images-1.medium.com/max/736/1*qL4pbZBRnqMIwBUVjcD2gA.png" /><figcaption>Merge with fast-forward</figcaption></figure><p><strong>Merge fast-forward</strong> — if GitHub allowed fast-forward option we would be able to get a situation like this one. Fast Forward in this case “swaps” branch develop with release. The merge commit message is “Merging from develop into release” and that stays in the history, but there’s a saying:</p><blockquote>One picture is worth more than a thousand words.</blockquote><p>Clean GitFlow with GitHub is either unsafe or impossible — which affects history graphs. We should be aware of strengths and weaknesses of tools (and libraries) we use. Work out with your team a preferred solution and make sure everyone follows the same rules.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c675aa4f606a" width="1" height="1" alt=""><hr><p><a href="https://medium.com/android-news/gitflow-with-github-c675aa4f606a">GitFlow with GitHub</a> was originally published in <a href="https://medium.com/android-news">AndroidPub</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Handling Media Files With MediaFacer Library For Android]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/android-news/handling-media-files-with-mediafacer-library-for-android-cd9d2ca0dc68?source=rss----8fca399d4de---4"><img src="https://cdn-images-1.medium.com/max/777/1*HQEFkLd93rU5IjEL-SjHbg.jpeg" width="777"></a></p><p class="medium-feed-snippet">Querying media content on android with ease using the MediaFacer class library</p><p class="medium-feed-link"><a href="https://medium.com/android-news/handling-media-files-with-mediafacer-library-for-android-cd9d2ca0dc68?source=rss----8fca399d4de---4">Continue reading on AndroidPub »</a></p></div>]]></description>
            <link>https://medium.com/android-news/handling-media-files-with-mediafacer-library-for-android-cd9d2ca0dc68?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/cd9d2ca0dc68</guid>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[androiddev]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[android]]></category>
            <dc:creator><![CDATA[M.N Emmanuel]]></dc:creator>
            <pubDate>Mon, 27 Apr 2020 07:45:41 GMT</pubDate>
            <atom:updated>2021-03-19T08:11:06.216Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[Jetpack Compose: Twitter UI]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/android-news/jetpack-compose-twitter-ui-96f76577143a?source=rss----8fca399d4de---4"><img src="https://cdn-images-1.medium.com/max/2600/1*6t3FHu_d8T2Q6QldaglFHA.png" width="4451"></a></p><p class="medium-feed-snippet">I decided to test out Jetpack Compose by making a simple Twitter UI clone after I came across this tweet by Mariano Zorrilla:</p><p class="medium-feed-link"><a href="https://medium.com/android-news/jetpack-compose-twitter-ui-96f76577143a?source=rss----8fca399d4de---4">Continue reading on AndroidPub »</a></p></div>]]></description>
            <link>https://medium.com/android-news/jetpack-compose-twitter-ui-96f76577143a?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/96f76577143a</guid>
            <category><![CDATA[kotlin]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[jetpack-compose]]></category>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[jetpack]]></category>
            <dc:creator><![CDATA[Ahmed Rizwan]]></dc:creator>
            <pubDate>Sat, 25 Apr 2020 23:46:18 GMT</pubDate>
            <atom:updated>2020-05-26T15:08:47.291Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[What’s inside : Who touched my phone? Android App]]></title>
            <link>https://medium.com/android-news/whats-inside-who-touched-my-phone-android-app-e1e280781132?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/e1e280781132</guid>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[apk]]></category>
            <category><![CDATA[reverse-engineering]]></category>
            <category><![CDATA[android]]></category>
            <dc:creator><![CDATA[Abdelkader Sellami]]></dc:creator>
            <pubDate>Fri, 24 Apr 2020 19:07:32 GMT</pubDate>
            <atom:updated>2020-04-24T19:07:32.616Z</atom:updated>
            <content:encoded><![CDATA[<h3>What’s inside : Who touched my phone? Android App</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Hl2JNVVQKEAsCSkDYTDgNQ.jpeg" /></figure><p>This is the first article in this series <strong><em>“What’s inside my app”</em></strong><em>, </em>this series will focus on reverse-engineering and strip android apps down to their original base code -or at least try to get the original one. In each article i will be picking an android app from the play store, decompile it and lay for you all the things underneath it hood.</p><p>Feel free to suggest if you have any app and challenge me to reverse engineer it for you.</p><p>In today’s article, we will be talking about <strong><em>“Who touched my phone?”</em></strong> android app. The app has over 1 Million downloads and over 23K reviews most of them 5 stars reviews.</p><p>Who touched my phone? (WTMP) is an application with a focus on privacy, it will record for you those who are trying to snoop on your phone without you noticing, using your front camera in the background. The records on the app will allow you to see when, who and what apps did this person used while you are away.</p><p>Once you’ve installed the app, your open it, go through the different permissions dialog and then you start the app. You can dismiss the app as it’ll be running on the background, once your device went to sleep and the screen is off, it then start recording when who ever pick the phone and start using it, first by taking a picture of the person using it and also recording all the apps that person went through.</p><h3>Summary of the App</h3><p>Now this is the fun part where we’ll decompile and reverse engineer the app, for that i will be using a tool that i created <a href="https://github.com/islem19/decompile-my-APK">Decompile My Apk</a> , it’s an easy to use shell script which combines couple of other tools that helps in the process of retrieving the Java Classes from the Apk.</p><p>The repo structure, from first sight it looks well structured, lot of permissions-we’ll talk on that in a while, activities, fragments, Job scheduler, Services.</p><p>The app is developed under the MVVM (Model, View, ViewModel) architecture with Dagger for dependency injection, Data Binding (to bind UI components in your layouts to data sources) , Navigation and Lifecycle component (which is part of the Jetpack components that can manage complex navigation, transition animation and provides classes and interfaces that let you build lifecycle-aware components — which are components that can automatically adjust their behavior based on the current lifecycle state of an activity or fragment). The App also support multiple languages.</p><h3>Dependencies</h3><p>Let see which libraries and dependencies the app uses:</p><p><strong>AndroidX : </strong>it is a major improvement to the original Android <a href="https://developer.android.com/topic/libraries/support-library">Support Library</a>, which is no longer maintained. AndroidX packages fully replace the Support Library by providing feature parity and new libraries. it includes dependencies such as: WorkManager (API makes it easy to schedule deferrable, asynchronous tasks that must be run reliably), ViewPager(Layout manager that allows the user to flip left and right through pages of data), ViewBinding(Data Binding), Room DB, RecyclerView(A flexible view for providing a limited window into a large data set), Navigation, LocalBrodcastManager(Helper to register for and send broadcasts of Intents to local objects within your process), Lifecycle, Biometric(includes a biometric prompt UI out of the box).</p><p><strong>BillingClient : </strong>It provides convenience methods for in-app billing. You can create one instance of this class for your application and use it to process in-app billing operations.</p><p><a href="https://github.com/bumptech/glide"><strong>Glide</strong></a><strong> : </strong>is a fast and efficient open source media management and image loading framework for Android that wraps media decoding, memory and disk caching, and resource pooling into a simple and easy to use interface.</p><p><a href="https://firebase.google.com/docs/crashlytics"><strong>Firebase Crashlytics</strong></a><strong> :</strong> is a lightweight, realtime crash reporter that helps you track, prioritize, and fix stability issues that erode your app quality.</p><p><a href="https://github.com/FasterXML/jackson-core"><strong>FasterXML Jackson</strong></a><strong> :</strong> This project contains core low-level incremental (“streaming”) parser and generator abstractions used by <a href="https://github.com/FasterXML/jackson">Jackson Data Processor</a>. It also includes the default implementation of handler types (parser, generator) that handle JSON format.</p><p><a href="https://github.com/google/gson"><strong>Gson</strong></a> <strong>:</strong> is a Java serialization/deserialization library to convert Java Objects into JSON and back.</p><p><a href="https://github.com/google/dagger"><strong>Dagger</strong></a><strong> :</strong> is a fast dependency injector for Java and Android. Dagger is a compile-time framework for dependency injection. It uses no reflection or runtime bytecode generation, does all its analysis at compile-time, and generates plain Java source code.</p><p><a href="https://github.com/census-instrumentation/opencensus-java"><strong>OpenCensus</strong></a><strong> : </strong>is a toolkit for collecting application performance and behavior data. It currently includes 3 apis: stats, tracing and tags.</p><h3>Permissions</h3><p><strong>PACKAGE_USAGE_STATS : </strong>Android provides <em>System services</em> to access device usage history and statistics but accessing these System services are only supported from API level 21 and above, and to use it you’ll need to request this permission. Granting this permission will allow to use the API to access the app usage time as well as the network. In this case, the app uses it to keep track of the apps being launched.</p><p><strong>FOREGROUND_SERVICE : </strong>Due to Android battery optimizations introduced in Android 8.0 (API level 26), background services have now some important <a href="https://developer.android.com/about/versions/oreo/background.html#services">limitations</a>. Essentially, they are killed once the app is in background for a while making them worthless for our purpose of running an always-running service. One way to make your service running endlessly is by making a foreground service, which performs some operation that is noticeable to the user through a persistent notification. foreground services are use to monitor the device and keep track of what happening continuously even if the app is dismissed.</p><p><strong>CAMERA : </strong>obviously to access the camera module and be able to take pictures using front camera, you need to ask the user to grant this permission.</p><p><strong>USE_BIOMETRIC : </strong>to access the biometric module, you’ll need to declare this permission and use the Biometric Manager for different operation. In this case, the app uses it to keep track if someone is unlocking their device with the fingerprint sensor.</p><p><strong>READ_EXTERNAL_STORAGE / WRITE_EXTERNAL_STORAGE : </strong>user should implicitly asked to grant this permission, to allow to perform read and write operation on the external storage of the device.</p><p><strong>SYSTEM_ALERT_WINDOW :</strong> Allows an app to create windows using the type WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY, shown on top of all other apps. User should implicitly be asked to allow the app to run overlay on top of other apps.</p><p><strong>WAKE_LOCK : </strong>Allows using PowerManager WakeLocks to keep processor from sleeping or screen from dimming, and avoid the app (the process) to be killed by the system on sleep mode or when screen turns off.</p><p><strong>com.android.vending.BILLING : f</strong>or In-app billing services which relies on the Google Play application and handles all communication between your application and the Google Play server. To use the Google Play application, your application must request this permission.</p><p><strong>REQUEST_DELETE_PACKAGES : </strong>The permission allows an application to request deleting packages.</p><p><strong>ACCESS_NETWORK_STATE : </strong>Allows applications to access information about networks and check if the different status about the network you connected on.</p><p><strong>RECEIVE_BOOT_COMPLETED : </strong>Allows an application to receive the Intent.ACTION_BOOT_COMPLETED that is broadcast after the system finishes booting. If you don&#39;t request this permission, you will not receive the broadcast at that time.</p><p><strong>INTERNET : </strong>Allows applications to open network sockets.</p><h3>General Overview of the code base</h3><p>The app is packaged and structured as follow:</p><p><strong>View : </strong>includes all the fragments that the app uses, such as AboutFragment, AuthFragment, RateAppFragment, SettingsFragment…</p><p><strong>ViewModel :</strong> it has only one view model, which is the HomeViewModel, it observes over the new reports generated by the repository and add them to the Main View, also set enable/disable app.</p><p><strong>Utils : </strong>it has different Utilities classes that are needed by the app such as: isServiceRunning(), isNetworkAvailable(), NotificationUtils….</p><p><strong>Repo : </strong>it has an interface and an AppRepository class which implement it, the Class manages the reports data, it does operations on the DAO (data access object), creates new reports, fetch, update, delete…</p><p><strong>Di : </strong>the repo includes the dagger app component and app modules needed by the app to provide dependency injection.</p><p><strong>DataBinding : </strong>generated by the Data Binding Library, which is with purpose to bind UI components in thelayouts to data sources.</p><p><strong>Database : </strong>the Room persistence library which is part of Jetpack, provides an abstraction layer over SQLite to allow for more robust database access while harnessing the full power of SQLite. this repo includes all the abstraction layers needed to create a Room SQLite DB. First, we have the Entity which is the model of the data saved in the DB some of the information which saved such as: beginTime, endTime, attemptsNum, photoPaths… The DAO (Data Access Object) includes all the operations done to the DB, fetch, update, add, delete…Finally, the converters, as the DB accept only primitive data type, you need to convert object data type such as Lists or Arrays to String using Gson.toJson().</p><p><strong>Core:</strong> this includes all core services and all functionality and processing used by the app is implemented in this section. you’ll get the <em>camera sub-repo</em> with all operation and services needed by the app to access the camera module. <em>screen sub-repo</em>, to monitor when the screen is off and start listening in background. <em>sync sub-repo </em>, which manages and syncs the report over at Google drive (if you enable this feature), the service includes an alarm and worker to make sure your reports are synced with your google drive in specific intervals.</p><p><strong>Adapters: </strong>these are the adapters for the RecyclerView, ViewPager… with the purpose to populate data inside whatever view is bounded to.</p><h3>Veridct and Score</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/303/1*aT4-1MpNbVNfKgo1y3uRow.png" /></figure><p>Final score, the app is very easy to reproduce and clone it functionality. from decompiling the APK file, you’ll get to understand all the logci and how it function and you can pretty easily reproduce any functionality you want.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e1e280781132" width="1" height="1" alt=""><hr><p><a href="https://medium.com/android-news/whats-inside-who-touched-my-phone-android-app-e1e280781132">What’s inside : Who touched my phone? Android App</a> was originally published in <a href="https://medium.com/android-news">AndroidPub</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Realtime Database vs Firestore: 9 Major Differences]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/android-news/realtime-database-vs-firestore-447b2d990599?source=rss----8fca399d4de---4"><img src="https://cdn-images-1.medium.com/max/1280/1*AdcNwj3-u4O7XqdtwC1CIA.png" width="1280"></a></p><p class="medium-feed-snippet">Firestore is much better than the Realtime Database like the black trainer. Period.</p><p class="medium-feed-link"><a href="https://medium.com/android-news/realtime-database-vs-firestore-447b2d990599?source=rss----8fca399d4de---4">Continue reading on AndroidPub »</a></p></div>]]></description>
            <link>https://medium.com/android-news/realtime-database-vs-firestore-447b2d990599?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/447b2d990599</guid>
            <category><![CDATA[androiddev]]></category>
            <category><![CDATA[android]]></category>
            <category><![CDATA[firebase]]></category>
            <category><![CDATA[firestore]]></category>
            <category><![CDATA[android-app-development]]></category>
            <dc:creator><![CDATA[Wajahat Karim]]></dc:creator>
            <pubDate>Fri, 17 Apr 2020 20:00:38 GMT</pubDate>
            <atom:updated>2020-04-17T20:00:38.040Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[How to migrate GitLab/Bitbucket to GitHub in a simple way]]></title>
            <link>https://medium.com/android-news/how-to-migrate-gitlab-bitbucket-to-github-in-a-simple-way-e38bc60b1547?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/e38bc60b1547</guid>
            <category><![CDATA[github]]></category>
            <category><![CDATA[git]]></category>
            <category><![CDATA[bitbucket]]></category>
            <category><![CDATA[gitlab]]></category>
            <dc:creator><![CDATA[Quang Nguyen]]></dc:creator>
            <pubDate>Wed, 15 Apr 2020 12:55:23 GMT</pubDate>
            <atom:updated>2021-07-02T06:46:47.097Z</atom:updated>
            <cc:license>https://creativecommons.org/publicdomain/mark/1.0/</cc:license>
            <content:encoded><![CDATA[<blockquote><a href="https://tinido.com">Checkout my latest app: Tinido.</a></blockquote><p>GitHub has just announced <a href="https://github.blog/2020-04-14-github-is-now-free-for-teams/">a happy news</a> today for us, developers.<br>“<strong>Teams on GitHub can create unlimited private repositories for free.”</strong></p><p>So, here are their newest updates on the free package.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/628/1*YNksnhX0n3i652-yIemt-w.png" /><figcaption>Screenshot was taken on April 15th, 2020. Source (<a href="https://github.com/pricing">https://github.com/pricing</a>)</figcaption></figure><p>These changes are so competitive to other code hosting services like Bitbucket or GitLab. Many teams are going to relocate their projects to GitHub as I think.</p><p>If you share the same idea and look for a simple way to migrate a repo from Bitbucket or GitLab, the followings are several simple steps to accomplish this.</p><ol><li>Inside your GitHub team page, create an empty private repo with the same name of Bitbucket/GitLab repo that you want to transfer.</li><li>Copy your newly created repo link, either in HTTPS or SSH. For example, git@github.com:team-name/repo-name.git (SSH type)</li><li>Inside your local project folder, change the remote URL under.git/config ‘s file to your copied GitHub&#39;s one. The content looks similar as follows. [remote &quot;origin&quot;]<br> url = git@github.com:team-name/repo-name.git<br> fetch = +refs/heads/*:refs/remotes/origin/*</li><li>Do a git push: git push --all . It will push all codes and commit history on your newly GitHub repository.</li><li>Done. After that, when we push new commits, it will push to GitHub only.</li><li>The Bitbucket/GitLab repo now can be archived to ‘Read-only’ mode.</li></ol><p>Please get in touch with me via <a href="https://github.com/quangctkm9207">Github</a>. Happy coding and have a good time!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=e38bc60b1547" width="1" height="1" alt=""><hr><p><a href="https://medium.com/android-news/how-to-migrate-gitlab-bitbucket-to-github-in-a-simple-way-e38bc60b1547">How to migrate GitLab/Bitbucket to GitHub in a simple way</a> was originally published in <a href="https://medium.com/android-news">AndroidPub</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What Happened to Chat Bubbles / Heads in Android?]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/android-news/what-happened-to-chat-bubbles-heads-in-android-a30597f36115?source=rss----8fca399d4de---4"><img src="https://cdn-images-1.medium.com/max/1080/0*AqopT-mvNCzht-Sb.jpeg" width="1080"></a></p><p class="medium-feed-snippet">How the SYSTEM_ALERT_WINDOW permission has been abused over the years by malware creators &amp; hackers?</p><p class="medium-feed-link"><a href="https://medium.com/android-news/what-happened-to-chat-bubbles-heads-in-android-a30597f36115?source=rss----8fca399d4de---4">Continue reading on AndroidPub »</a></p></div>]]></description>
            <link>https://medium.com/android-news/what-happened-to-chat-bubbles-heads-in-android-a30597f36115?source=rss----8fca399d4de---4</link>
            <guid isPermaLink="false">https://medium.com/p/a30597f36115</guid>
            <category><![CDATA[android-app-development]]></category>
            <category><![CDATA[chat]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[androiddev]]></category>
            <category><![CDATA[android]]></category>
            <dc:creator><![CDATA[Wajahat Karim]]></dc:creator>
            <pubDate>Fri, 10 Apr 2020 18:49:54 GMT</pubDate>
            <atom:updated>2020-04-10T18:49:54.496Z</atom:updated>
        </item>
    </channel>
</rss>